swagger: '2.0'
info:
  version: '1.0.0'
  title: Showcase
schemes: [http]
host: showcase.com
basePath: /v1
consumes: [application/json]
produces: [application/json]
paths: 
  /login:
    post:
      description: 'Returns token for authorized User'
      tags: [user]
      operationId: Login
      consumes:
        - "application/json"
      parameters:
        - name: 'login'
          in: 'body'
          required: true
          description: 'Login Payload'
          schema:
            $ref: '#/definitions/LoginInfo'
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/LoginSuccess'
        400:
          description: Bad Request
        404:
          schema:
            type: string
          description: User not found
        500:
          schema:
            type: string
          description: Server error
  /register:
    post:
      description: 'To register a new user'
      tags: [user]
      operationId: Register
      consumes:
        - 'application/json'
      parameters:
        - name: 'signup'
          in: 'body'
          required: true
          description: 'Registeration Payload'
          schema:
            $ref: '#/definitions/RegisterUser'
      responses:
        200:
          description: Successful registeration
          schema:
            $ref: '#/definitions/SuccessResponse'
        400:
          description: Bad Request
        404:
          schema:
            type: string
          description: User not found
        500:
          schema:
            type: string
          description: Server error
definitions:
  RegisterUser:
    type: object
    required: [userFirstName, userLastName, email,username,password]
    properties:
      userFirstName:
        type: string
      userLastName:
        type: string
      email:
        type: string
      username:
        type: string
      password:
        type: string
      
  SuccessResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  LoginInfo:
    type: object
    required: [email,password]
    properties:
      email:
        type: string
      password:
        type: string
  LoginSuccess:
    type: object
    properties:
      success:
        type: boolean
      token:
        type: string
