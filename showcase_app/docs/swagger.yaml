basePath: /
definitions:
  model.HTTPError:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  model.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
      userID:
        type: integer
    type: object
  model.RegisterUser:
    properties:
      email:
        type: string
      password:
        type: string
      userFirstName:
        type: string
      userLastName:
        type: string
      username:
        type: string
    type: object
  model.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  model.UpdateProfile:
    properties:
      address:
        type: string
      batchYear:
        type: integer
      phoneNum:
        type: string
      userFirstName:
        type: string
      userLastName:
        type: string
    type: object
  model.UpdateRole:
    properties:
      role:
        type: string
      userID:
        type: integer
    type: object
  model.User:
    properties:
      address:
        type: string
      batchYear:
        type: integer
      binusianID:
        type: integer
      email:
        type: string
      password:
        type: string
      phoneNum:
        type: string
      roleID:
        type: integer
      userFirstName:
        type: string
      userID:
        type: integer
      userLastName:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: youremail@provider.com
    name: API Support
  description: This is a sample swagger for Fiber
  title: Fiber Example API
  version: "1.0"
paths:
  /api/v1/user/:userID:
    get:
      consumes:
      - application/json
      description: Get user info by userID in token
      parameters:
      - description: Get User Profile
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Query user info
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Return tokens for authenticated users
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Login user
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Add user to database
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Register a new user
  /api/v1/user/update-profile:
    patch:
      consumes:
      - application/json
      description: Update user profile by userID in token
      parameters:
      - description: Update Profile
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update user profile
  /api/v1/user/update-role:
    patch:
      consumes:
      - application/json
      description: Update user profile by userID in token
      parameters:
      - description: Update Role
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update user role
swagger: "2.0"
