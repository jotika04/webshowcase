basePath: /
definitions:
  model.AccessToken:
    properties:
      access_token:
        type: string
    type: object
  model.HTTPError:
    properties:
      message:
        example: status bad request
        type: string
      status:
        example: 400
        type: integer
    type: object
  model.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      success:
        type: boolean
      userID:
        type: integer
    type: object
  model.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.Notification:
    properties:
      notif_text:
        example: project successfully submitted
        type: string
      notificationID:
        type: integer
      projectID:
        example: 1
        type: integer
      userID:
        example: 1
        type: integer
    type: object
  model.Project:
    properties:
      course:
        type: string
      description:
        type: string
      projectID:
        type: integer
      projectImage:
        type: string
      projectName:
        type: string
      projectThumbnail:
        type: string
      projectVideo:
        type: string
      userID:
        type: integer
      verified:
        type: boolean
    type: object
  model.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  model.RegisterUser:
    properties:
      email:
        type: string
      password:
        type: string
      userFirstName:
        type: string
      userLastName:
        type: string
      username:
        type: string
    type: object
  model.RejectProject:
    properties:
      message:
        type: string
      projectID:
        type: integer
    type: object
  model.SubmitProject:
    properties:
      course:
        type: string
      description:
        type: string
      projectImage:
        type: string
      projectName:
        type: string
      projectThumbnail:
        type: string
      projectVideo:
        type: string
    type: object
  model.UpdateProfile:
    properties:
      address:
        type: string
      batchYear:
        type: integer
      phoneNum:
        type: string
      userFirstName:
        type: string
      userLastName:
        type: string
    type: object
  model.UpdateRole:
    properties:
      role:
        example: guest
        type: string
      userID:
        example: 1
        type: integer
    type: object
  model.User:
    properties:
      address:
        type: string
      batchYear:
        type: integer
      binusianID:
        type: integer
      email:
        type: string
      password:
        type: string
      phoneNum:
        type: string
      roleID:
        type: integer
      userFirstName:
        type: string
      userID:
        type: integer
      userLastName:
        type: string
      username:
        type: string
    type: object
  model.VerifyProject:
    properties:
      projectID:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: youremail@provider.com
    name: API Support
  description: This is a sample swagger for Fiber
  title: Fiber Example API
  version: "1.0"
paths:
  /api/v1/get-access-token:
    get:
      consumes:
      - application/json
      description: returns a new access token using refresh token
      parameters:
      - description: Get access token
        in: body
        name: refreshtoken
        required: true
        schema:
          $ref: '#/definitions/model.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get New Access Token
      tags:
      - User Authentication
  /api/v1/project/:projectID:
    get:
      consumes:
      - application/json
      description: Get project info by projectID
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Get project details
      tags:
      - Project
  /api/v1/project/reject:
    delete:
      consumes:
      - application/json
      description: Decline project submission
      parameters:
      - description: Reject Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.RejectProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Reject project submission
      tags:
      - Project
  /api/v1/project/submit:
    post:
      consumes:
      - application/json
      description: Submit project into database
      parameters:
      - description: Submit Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.SubmitProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Submit project
      tags:
      - Project
  /api/v1/project/verify:
    patch:
      consumes:
      - application/json
      description: Update project verified status into true
      parameters:
      - description: Verify Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.VerifyProject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Verify project
      tags:
      - Project
  /api/v1/unverified-project:
    get:
      consumes:
      - application/json
      description: query projects from database where verified = false
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Display list of unverified projects
      tags:
      - Project
  /api/v1/user/:userID:
    get:
      consumes:
      - application/json
      description: Get user info by userID in token
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Query user info
      tags:
      - User Profile
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Return tokens for authenticated users
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Login user
      tags:
      - User Authentication
  /api/v1/user/notification/:userID:
    get:
      consumes:
      - application/json
      description: Get all notifications of user by userID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Notification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Display all notifications
      tags:
      - Notification
  /api/v1/user/notification/read/:notificationID:
    delete:
      consumes:
      - application/json
      description: Read a notification and delete it from database
      parameters:
      - description: Notification ID
        in: path
        name: notificationID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Read notification
      tags:
      - Notification
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Add user to database
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Register a new user
      tags:
      - User Authentication
  /api/v1/user/update-profile:
    patch:
      consumes:
      - application/json
      description: Update user profile by userID in token
      parameters:
      - description: Update Profile
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update user profile
      tags:
      - User Profile
  /api/v1/user/update-role:
    patch:
      consumes:
      - application/json
      description: Update user profile by userID in token
      parameters:
      - description: Update Role
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.HTTPError'
      summary: Update user role
      tags:
      - Admin
swagger: "2.0"
